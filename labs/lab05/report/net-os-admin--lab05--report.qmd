---
# Preamble

## Author
author:
  name: Жибицкая Евгения Дмитриевна
  degrees: 
  orcid: 0000-0002-0877-7063
  email: 
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Лабораторная работа №5"
subtitle: "Дисциплина: Администрирование сетевых подсистем"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Продолжение работы с HTTP-сервером Apache, приобретение практических навыков по  его расширенному конфигурированию в части безопасности и возможности использования PHP.

# Выполнение лабораторной работы

Запустим виртуальную машину сервер для работы ([рис. @fig-001]).

![Запуск](image/1.jpg){#fig-001 width=70%}


Перейдем в режим суперпользователя, создадим каталог private в нужном каталоге ([рис. @fig-002]).

![Каталог private ](image/2.jpg){#fig-002 width=70%}

Генерируем ключ и сертификат, заполняем все запрашиваемые данные ([рис. @fig-003] и [рис. @fig-004]). Файл с ключом появляется в том же каталоге, копируем его в  /etc/ssl/certs.

![Генерация ключа](image/3.jpg){#fig-003 width=70%}

![Данные для сертификата](image/4.jpg){#fig-004 width=70%}

Далее отредактируем конфигурационный файл для возможности  функционирования веб-сервера через протокол HTTPS ([рис. @fig-005]).

![Файл конфигурации ](image/6.jpg){#fig-005 width=70%}


Вносим изменения в настройки межсетевого экрана на сервере, разрешив работу с https([рис. @fig-006]).

![Настройки межсетевого экрана](image/5.jpg){#fig-006 width=70%}


Перезапускаем веб-сервер([рис. @fig-007]).

![Перезапуск веб-сервера ](image/7.jpg){#fig-007 width=70%}


Запускаем ВМ client([рис. @fig-008]), в строке браузера вводдим название веб-сервера и убеждаемся, что произошло автоматическое переключение на работу по протоколу HTTPS([рис. @fig-009]). 

На открывшейся странице с сообщением о незащищённости соединения нажимаем кнопку «Дополнительно»,добавляем адрес  сервера в постоянные исключения. Затем просматриваем содержание сертификата([рис. @fig-010]).

![Запуск client ](image/8.jpg){#fig-008 width=70%}

![Переход по адресу](image/9.jpg){#fig-009 width=70%}

![Сертификат ](image/10.jpg){#fig-010 width=70%}

Далее необходимо установить пакеты для работы с php ([рис. @fig-011]).

![Установка пакетов ](image/11.jpg){#fig-011 width=70%}

В каталоге с  /var/www/html/www.edzhibitskaya.net  заменяем
файл index.html на index.php ([рис. @fig-012]) и корректируем права доступа([рис. @fig-013]).

![Файл index.php](image/12.jpg){#fig-012 width=70%}

![Замена файла, права доступа ](image/13.jpg){#fig-013 width=70%}

Также восстанавливаем контекст безопасности в SELinux и перезапускаем сервер([рис. @fig-014]).

![Перезапуск](image/14.jpg){#fig-014 width=70%}

Просмотрим страницу по нужному адресу на машине клиент([рис. @fig-015]).

![www.edzhibitskaya.net](image/15.jpg){#fig-015 width=70%}

Внесем изменения в настройки внутреннего окружения ВМ.

Переходим в каталог /vagrant/provision/server/http и скопируем в директории конфигурационные файлы([рис. @fig-016]). Внесем изменения в скрипт http.sh, до-
бавив установку PHP и настройку межсетевого экрана, разрешающую работать с https.([рис. @fig-017]).

![Каталоги и файлы](image/16.jpg){#fig-016 width=70%}

![Скрипт http.sh ](image/17.jpg){#fig-017 width=70%}

# Контрольные вопросы

1. В чём отличие HTTP от HTTPS?

HTTP передаёт данные открытым текстом, HTTPS — зашифрованными.

2. Каким образом обеспечивается безопасность контента веб-сервера при работе через HTTPS?

 Безопасность HTTPS обеспечивается:

        Шифрованием данных (симметричное шифрование)

        Аутентификацией сервера через цифровые сертификаты

        Защитой от подмены и прослушивания

3. Что такое сертификационный центр? Приведите пример

Сертификационный центр (CA) — организация, выпускающая цифровые сертификаты, подтверждающие подлинность сайтов.
    Примеры: LDigiCert, Comodo, GlobalSign.


# Выводы

В ходе работы были приобретены практические навыки по расширенному конфигурированию HTTP-сервера Apache в части безопасности и возможности использования PHP, настроен сервер для работы по протоколу  HTTPs.

# Список литературы{.unnumbered}

[ТУИС](https://esystem.rudn.ru/pluginfile.php/2854748/mod_resource/content/8/005-http-adv.pdf)

::: {#refs}
:::
