---
# Preamble

## Author
author:
  name: Жибицкая Евгения Дмитриевна
  degrees: 
  orcid: 0000-0002-0877-7063
  email: 
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Лабораторная работа №11"
subtitle: "Дисциплина: Администрирование сетевых подсистем"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Продолжение работы с Rocky Linux, приобретение практических навыков по настройке удалённого доступа к серверу с помощью SSH.

# Выполнение лабораторной работы

Запустим виртуальную машину сервер для работы, перейдем в режим суперпользователя и в дополнительном терминале запускаем мониторинг почтовой службы. С клиента попытаемся получить доступ к серверу посредством SSH-соединения через пользователя root - доступ запрещен([рис. @fig-001]).

![Попытка получения доступа](image/1.jpg){#fig-001 width=70%}

 
На сервере откроем файл /etc/ssh/sshd_config конфигурации sshd для редактирования и запретим вход на сервер пользователю root, перезапустим систему sshd([рис. @fig-002]).

![/etc/ssh/sshd_config](image/2.jpg){#fig-002 width=70%}

 
Повторим попытку получения доступа - он так же запрещен([рис. @fig-003]).

![ssh root@server](image/3.jpg){#fig-003 width=70%}

 
С клиента попытаемся получить доступ к серверу посредством SSH-соединения через пользователя - доступ разрешен, происходит подключение([рис. @fig-004]).

![Подключение через пользователя](image/4.jpg){#fig-004 width=70%}

 На сервере откроем файл /etc/ssh/sshd_config конфигурации sshd на редактирование и добавим строку([рис. @fig-005]). Также перезапускаем службу.

![/etc/ssh/sshd_config](image/5.jpg){#fig-005 width=70%}

Повторим попытку получения доступа с клиента к серверу посредством
SSH-соединения через пользователя - доступа нет([рис. @fig-006]). Также перезапускаем службу.

![Повторное подключение через пользователя](image/6.jpg){#fig-006 width=70%}

Еще раз внесем изменения в файл, перезагрузим службу и попытаемся получить доступ([рис. @fig-007] и [рис. @fig-008]).

![/etc/ssh/sshd_config](image/7.jpg){#fig-007 width=70%}

![Попытка подключения](image/8.jpg){#fig-008 width=70%}

 
Перейдем к настройке дополнительных портов для удалённого
доступа по SSH.
 
 
На сервере внесем изменения в файле конфигурации sshd /etc/ssh/sshd_config([рис. @fig-009]).

![Порты /etc/ssh/sshd_config](image/9.jpg){#fig-009 width=70%}

Потом перезапустим sshd и посмотрим расширенный статус его работы([рис. @fig-010]).

![Статус sshd](image/10.jpg){#fig-010 width=70%}

 
Исправим на сервере метки SELinux к порту 2022 и в настройках межсетевого экрана откройте порт 2022 протокола TCР, посмотрим статус([рис. @fig-011] и [рис. @fig-012]).

![Исправление меток](image/11.jpg){#fig-011 width=70%}

![Статус](image/12.jpg){#fig-012 width=70%}
 
 
С клиента получим доступ к серверу посредством SSH-соединения
через пользователя, залогинимся в root([рис. @fig-013]).

![Подключение к серверу](image/13.jpg){#fig-013 width=70%}

 
Настроим удаленный доступ по SSH по ключу.
 

На сервере в конфигурационном файле /etc/ssh/sshd_config зададим параметр, разрешающий аутентификацию по ключу, перезапустим службу([рис. @fig-014]).

![/etc/ssh/sshd_config](image/14.jpg){#fig-014 width=70%}

На клиенте сформируем SSH-ключ([рис. @fig-015]).

![Формирование ключа](image/15.jpg){#fig-015 width=70%}

Скопируем открытый ключ на сервер, подкючимся через SSH к серверу([рис. @fig-016]).

![Подключение по SSH](image/16.jpg){#fig-016 width=70%}


Перейдем к организации туннелей SSH, перенаправлению TCP-портов

На клиенте посмотрим, запущены ли какие-то службы с протоколом TCP,перенаправим  порт 80 на server.edzhibitskaya.net на порт 8080 и еще раз посмотрим какие службы запущены([рис. @fig-017]).

![Подключение по SSH](image/17.jpg){#fig-017 width=70%}

Перейдем по адресу и убедимся, что отображается страница с приветствием([рис. @fig-018]).

![Подключение по SSH](image/18.jpg){#fig-018 width=70%}

Попробуем запустить консольные приложения тем же способом.

Посмотрим имя узла сервера, посмотрим с клиента список файлов на сервере и почту([рис. @fig-019] и [рис. @fig-020]).
 
![Список файлов](image/19.jpg){#fig-019 width=70%}

![Почта](image/20.jpg){#fig-020 width=70%}


Также запустим графические приложения.

На сервере в конфигурационном файле /etc/ssh/sshd_config разрешим отображать на локальном клиентском компьютере графические интерфейсы X11, перезапустим службу и с клиента удалённо подключимся к серверу и запустим графическое приложение, например firefox([рис. @fig-021] и [рис. @fig-022]).

![/etc/ssh/sshd_config](image/21.jpg){#fig-021 width=70%}

![Открытие приложения](image/22.jpg){#fig-022 width=70%}


Наконец, внесем изменения в настройки внутреннего окружения.
 
Копируем файлы в соответствующие подкаталоги([рис. @fig-023]), создаем исполняемый файл([рис. @fig-024]) и вносим изменения в Vagrantfile([рис. @fig-025])
 
![Каталоги](image/23.jpg){#fig-023 width=70%}

![Скрипт](image/24.jpg){#fig-024 width=70%}

![Vagrantfile](image/25.jpg){#fig-025 width=70%}


 
 
 

# Контрольные вопросы

1. Вы хотите запретить удалённый доступ по SSH на сервер пользователю root и разрешить доступ пользователю alice. Как это сделать?

PermitRootLogin no
AllowUsers alice

2. Как настроить удалённый доступ по SSH через несколько портов? Для чего это может потребоваться?

Port 22
Port 2022

3. Какие параметры используются для создания туннеля SSH, когда команда ssh устанавливает фоновое соединение и не ожидает какой-либо конкретной команды?

ssh -f -N user@host

4. Как настроить локальную переадресацию с локального порта 5555 на порт 80 сервера server2.example.com?

ssh -L 5555:server2.example.com:80 user@gateway

5. Как настроить SELinux, чтобы позволить SSH связываться с портом 2022?

semanage port -a -t ssh_port_t -p tcp 2022

6. Как настроить межсетевой экран на сервере, чтобы разрешить входящие подключения по SSH через порт 2022?

firewall-cmd --add-port=2022/tcp --permanent
firewall-cmd --reload


# Выводы

 В ходе работы были приобретены практические навыки  по настройке удалённого доступа к серверу с помощью SSH.
 
 
# Список литературы{.unnumbered}

[ТУИС](https://esystem.rudn.ru/pluginfile.php/2854774/mod_resource/content/6/011-ssh.pdf)

::: {#refs}
:::
