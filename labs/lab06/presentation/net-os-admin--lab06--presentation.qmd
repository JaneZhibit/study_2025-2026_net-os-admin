---
# Preamble

## Author
author:
  name: Жибицкая Евгения Дмитриевна
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: 1132236130@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: Лабораторная работа №6
subtitle: Администрирование сетевых подсистем
license: CC BY
## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги
## Formats
format:
### Pdf output format
  beamer:
    toc: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
#### Language
    babel-lang: russian
    babel-otherlangs: english
### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Цель

## Цель

- Продолжение работы с Rocky, приобретение практических навыков по установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB

# Ход работы

## Запуск ОС
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Для начала загрузим нашу виртуальную машину командой  vagrant up
:::
::: {.column width="50%"}


![Загрузка машины](image/1.jpg)

:::
::::::::::::::

## Подготовка к работе
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

![Установка пакетов](image/2.jpg)
:::
::: {.column width="50%"}

Перейдем в режим суперпользователя, установим пакеты для работы с базой данных

:::
::::::::::::::


## Просмотр конфигурационных файлов
:::::::::::::: {.columns align=center}
::: {.column width="45%"}

![Каталог /etc/my.cnf.d](image/3.jpg)

:::
::: {.column width="50%"}

![Файл /etc/my.cnf](image/4.jpg)

:::
::::::::::::::

## Запуск базы данных
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

![Запуск Mariаdb](image/5.jpg)
:::
::: {.column width="50%"}

Запустим и включим  Mariаdb, убедимся, что прослушивается порт 3306

:::
::::::::::::::


## Скрипт конфигурации безопасности
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

С помощью запустившегося диалога и путём выбора [Y/n] пройдем все этапы установки.


:::
::: {.column width="50%"}

![mysql_secure_installation](image/6.jpg)

:::
::::::::::::::

## Просмотр команд
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Войдем в базу данных с правами администратора базы данных и посмотрим список команд

:::
::: {.column width="40%"}

![Вход и просмотр команд](image/7.jpg)

:::
::::::::::::::


## Доступные базы данных
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Из приглашения интерактивной оболочки MariaDB для отображения доступных в настоящее время баз данных введем MySQL-запрос
:::
::: {.column width="40%"}
![Просмотр доступных баз](image/8.jpg)

:::
::::::::::::::

## Конфигурация кодировки символов
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

![Статус](image/9.jpg)
:::
::: {.column width="50%"}
![Файл utf8.cnf](image/10.jpg)
:::
::::::::::::::

## Конфигурация кодировки символов
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

![Перезапуск Mariаdb](image/11.jpg)
:::
::: {.column width="50%"}
![Статус](image/12.jpg)
:::
::::::::::::::

## Создание базы данных
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Входим в базу данных с правами администратора и создаем новую с именем addressbook. Переходим к ней и отображаем имеющиеся таблицы.
:::
::: {.column width="50%"}

![Создание базы данных](image/14.jpg)

:::
::::::::::::::

## Создание базы данных
:::::::::::::: {.columns align=center}
::: {.column width="40%"}

![Создание таблицы](image/15.jpg)
:::
::: {.column width="50%"}

Затем создаем таблицу city с полями name и city, добавляем туда данные

:::
::::::::::::::

## Запрос
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Далее делаем запрос и смотрим что он выводит
:::
::: {.column width="50%"}

![Запрос](image/13.jpg)
:::
::::::::::::::

## Создание пользователя
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Создаем также пользователя для работы, используя наш логин, предоставляем ему права доступа, обновлям привилегии и смотрим общую информацию о таблице city базы данных addressbook
:::
::: {.column width="50%"}

![Создание пользователя](image/16.jpg)
:::
::::::::::::::

## Просмотр таблиц и баз данных
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

![Просмотр информации](image/17.jpg)
:::
::: {.column width="50%"}

Выйдем из окружения, просмотрим список баз данных и список таблиц базы данных
:::
::::::::::::::

## Создание резервных копий
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Создадим каталог для резервных копий, сделаем резервную копию базы данных addressbook, сжатую резервную копию базы данных addressbook и  сжатую резервную копию базы данных addressbook с указанием даты создания копии

Также восстановим базу данных addressbook из резервной копии и из сжатой резервной копии
:::
::: {.column width="50%"}

![Создание резервных копий](image/18.jpg)
:::
::::::::::::::


## Внесение изменений
:::::::::::::: {.columns align=center}
::: {.column width="50%"}

![Сохранение изменений](image/20.jpg)
:::
::: {.column width="50%"}

В каталоге  /vagrant/provision/server/, создадим
каталог mysql, в который поместим в соответствующие подкаталоги конфигурационные файлы MariaDB и резервную копию базы данных addressbook
:::
::::::::::::::

## Внесение изменений
:::::::::::::: {.columns align=center}
::: {.column width="45%"}

![Файл mysql.sh](image/19.jpg)
:::
::: {.column width="50%"}

![Vagrantfile](image/22.jpg)
:::
::::::::::::::



# Вывод

## Вывод

- В ходе работы были приобретены практические навыки по  установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB, создана база данных, ее копии, а также добавлен пользователь





