---
# Preamble

## Author
author:
  name: Жибицкая Евгения Дмитриевна
  degrees: 
  orcid: 0000-0002-0877-7063
  email: 
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Лабораторная работа №6"
subtitle: "Дисциплина: Администрирование сетевых подсистем"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Продолжение работы с Rocky, приобретение практических навыков по установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB.

# Выполнение лабораторной работы

Запустим виртуальную машину сервер для работы ([рис. @fig-001]).

![Запуск](image/1.jpg){#fig-001 width=70%}


Перейдем в режим суперпользователя, установим пакеты для работы с базой данных([рис. @fig-002]).

![Установка пакетов](image/2.jpg){#fig-002 width=70%}

Далее ознакомися с содержимым файлов конфигурации в каталоге /etc/my.cnf.d и в файле /etc/my.cnf - они содержат основную информацию с базовыми настройками, каталог имеет модульную структуру для клиента, утилит, безопасности и прочего([рис. @fig-003] и [рис. @fig-004]).

![Каталог /etc/my.cnf.d](image/3.jpg){#fig-003 width=70%}

![Файл /etc/my.cnf](image/4.jpg){#fig-004 width=70%}



Запустим и включим  Mariаdb, убедимся, что прослушивается порт 3306([рис. @fig-005]).

![Запуск Mariаdb](image/5.jpg){#fig-005 width=70%}

Запустим скрипт конфигурации безопасности([рис. @fig-006]) 

С помощью запустившегося диалога и путём выбора [Y/n] пройдем все этапы установки.

![mysql_secure_installation](image/6.jpg){#fig-006 width=70%}


Войдем в базу данных с правами администратора базы данных и посмотрим список команд([рис. @fig-007]).

![Вход и просмотр команд](image/7.jpg){#fig-007 width=70%}

Из приглашения интерактивной оболочки MariaDB для отображения доступных в настоящее время баз данных введем MySQL-запрос([рис. @fig-008]).

    Показаны стандартные системные базы данных MariaDB:

        - information_schema - метаданные о базах данных

        - mysql - системные таблицы (пользователи, привилегии)

        - performance_schema - метрики производительности

        - sys - вспомогательные представления для мониторинга
        

![Просмотр доступных баз](image/8.jpg){#fig-008 width=70%}


Перейдем к конфигурации кодировки символов

Для начала посмотрим на статус([рис. @fig-009]), затем создадим файл utf8.cnf в каталоге  /etc/my.cnf.d и добавим в него конфигурацию([рис. @fig-010]). 

Далее перезапустим Mariаdb и посмотрим статус еще раз([рис. @fig-011] и [рис. @fig-012]).

![Статус](image/9.jpg){#fig-009 width=70%}

![Файл utf8.cnf](image/10.jpg){#fig-009 width=70%}

![Перезапуск Mariаdb](image/11.jpg){#fig-009 width=70%}

![Статус](image/12.jpg){#fig-009 width=70%}


Перейдем к созданию базы данных.

Входим в базу данных с правами администратора и создаем новую с именем addressbook([рис. @fig-013]). Переходим к ней и отображаем имеющиеся таблицы.

![Создание базы данных](image/14.jpg){#fig-013 width=70%}


Затем создаем таблицу city с полями name и city, добавляем туда данные([рис. @fig-014]).

![Создание таблицы](image/15.jpg){#fig-014 width=70%}


Далее делаем запрос и смотрим что он выводит([рис. @fig-015]).

![Запрос](image/13.jpg){#fig-015 width=70%}


Создаем также пользователя для работы, используя наш логин, предоставляем ему права доступа, обновлям привилегии и смотрим общую информацию о таблице city базы данных addressbook([рис. @fig-016]).

![Создание пользователя](image/16.jpg){#fig-016 width=70%}

Выйдем из окружения, просмотрим список баз данных и список таблиц базы данных ([рис. @fig-017]).

![Просмотр информации](image/17.jpg){#fig-017 width=70%}


Кроме того, необходимо создать резервные копии.

Создадим каталог для резервных копий, сделаем резервную копию базы данных addressbook, сжатую резервную копию базы данных addressbook и  сжатую резервную копию базы данных addressbook с указанием даты
создания копии
Также восстановим базу данных addressbook из резервной копии и из сжатой резервной копии([рис. @fig-018]).

![Создание резервных копий](image/18.jpg){#fig-018 width=70%}


Наконец, сохраним изменения, внеся изменения в настройки ВМ.

В каталоге  /vagrant/provision/server/, создадим
каталог mysql, в который поместим в соответствующие подкаталоги конфигурационные файлы MariaDB и резервную копию базы данных addressbook([рис. @fig-019]).

![Сохранение изменений](image/20.jpg){#fig-019 width=70%}

В каталоге /vagrant/provision/server создадим исполняемый файл mysql.sh, добавим в него скрипт([рис. @fig-020]).

![Файл mysql.sh](image/19.jpg){#fig-020 width=70%}

Добавим также изменения в Vagrantfile([рис. @fig-021]).

![Vagrantfile](image/22.jpg){#fig-021 width=70%}

# Контрольные вопросы

1. Какая команда отвечает за настройки безопасности в MariaDB?

mysql_secure_installation 

2. Как настроить MariaDB для доступа через сеть?

В /etc/my.cnf.d/server.cnf изменить bind-address = 0.0.0.0 и настроить firewall

3. Какая команда позволяет получить обзор доступных баз данных после входа в среду оболочки MariaDB?

SHOW DATABASES; - список всех баз данных

4. Какая команда позволяет узнать, какие таблицы доступны в базе данных?

SHOW TABLES; - список таблиц в текущей базе

5. Какая команда позволяет узнать, какие поля доступны в таблице?

DESCRIBE table_name; или SHOW COLUMNS FROM table_name; - структура таблицы

6. Какая команда позволяет узнать, какие записи доступны в таблице?

SELECT * FROM table_name; - просмотр всех записей


7. Как удалить запись из таблицы?

SELECT * FROM table_name; - просмотр всех записей

8. Где расположены файлы конфигурации MariaDB? Что можно настроить с их помощью?

/etc/my.cnf и /etc/my.cnf.d/ -

9. Где располагаются файлы с базами данных MariaDB?

/var/lib/mysql/

10. Как сделать резервную копию базы данных и затем её восстановить?

Резервная копия: mysqldump -u user -p database > backup.sql
Восстановление: mysql -u user -p database < backup.sql





# Выводы

В ходе работы были приобретены практические навыки по  установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB, создана база данных, ее копии, а также добавлен пользователь.

# Список литературы{.unnumbered}

[ТУИС](https://esystem.rudn.ru/pluginfile.php/2854752/mod_resource/content/6/006-mysql.pdf)

::: {#refs}
:::
