---
# Preamble

## Author
author:
  name:  Жибицкая Евгения Дмитриевна
  degrees: 
  orcid: 
  email: 
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Фильтр пакетов iptables"
subtitle: " Дисциплина: Администрирование сетевых подсистем"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Введение

 Современные компьютерные сети являются сложными системами, требующими эффективной защиты от нежелательного доступа, различных атак и других угроз. Одним из важнейших инструментов обеспечения этой безопасности является фильтрация пакетов. В ОС семейства Linux основным средством для ее реализации является утилита iptables - интерфейс к подсистеме Netfilter.
 
Фильтрация пакетов позволяет контролировать прохождение пакетов через систему, разрешая или запрещая их обработку на основании различных критериев(адрес отправителя или получателя, порты, протоколы). Хорошо настроенные фильтры способны предотвратить несанкционированный доступ, ограничить активность вредоносного ПО и реализовывать базовые функции межсетевого экрана.

Целью данного доклада является рассмотрение назначения и принципов работы фильтра пакетов iptables, его архитектуре и основные компоненты, привести примеры использования. Особое внимание уделяется структуре таблиц и цепочек правил, которые определяют логику обработки сетевых пакетов в Linux.

# Основная часть

##  Общие сведения о iptables

iptables — это пользовательская утилита командной строки, которая позволяет администратору управлять правилами фильтрации пакетов и преобразования сетевых адресов (NAT) на уровне ядра Linux. Она является интерфейсом к подсистеме Netfilter — встроенному механизму ядра Linux, который перехватывает и обрабатывает сетевые пакеты на различных этапах их прохождения через систему.

Утилита основана на системе таблиц (например, filter, nat), цепочек правил (INPUT, FORWARD, OUTPUT) и отдельных правил, которые определяют действия (разрешить, заблокировать) над пакетами данных. Для работы с iptables требуются права суперпользователя (root). 

Фильтрация пакетов при помощи iptables является одним из ключевых компонентов системы безопасности Linux и может использоваться как на рабочих станциях, так и на серверах, выполняя функции программного межсетевого экрана (firewall).


## Архитектура iptables и принцип работы

Работа подсистемы основана на пяти основных точках перехвата пакетов (hooks) в сетевом стеке ядра:

1. PREROUTING – пакеты обрабатываются сразу после поступления в систему, до определения маршрута.
2. INPUT – обработка пакетов, адресованных непосредственно локальной системе.
3. FORWARD – обработка транзитных пакетов, пересылаемых через систему на другие узлы.
4. OUTPUT – обработка пакетов, сгенерированных самой системой перед их отправкой.
5. POSTROUTING – обработка пакетов после определения маршрута, перед их отправкой в сеть.

Каждая из этих точек связана с одной или несколькими цепочками правил в различных таблицах iptables. Когда пакет достигает определённой точки в сетевом стеке, он проверяется на соответствие правилам в соответствующей цепочке. Каждое правило содержит условия сопоставления (match) и действие (target). Если пакет удовлетворяет условиям, выполняется указанное действие (например, разрешение или блокировка).


##  Таблицы и цепочки iptables

iptables использует несколько таблиц, каждая из которых предназначена для решения определённой задачи. Основные таблицы:

1. filter – основная таблица для фильтрации пакетов. Используется для реализации правил межсетевого экрана.

Цепочки: INPUT, FORWARD, OUTPUT 

2. nat – таблица для трансляции сетевых адресов (NAT). Используется для маскарадинга, проброса портов и др.

Цепочки: PREROUTING, ОUTPUT, POSTROUTING 

3. mangle – таблица для модификации заголовков пакетов. Применяется для настройки QoS и сложных сценариев маршрутизации.

* Цепочки: все пять основных.

4. raw – таблица для задания исключений из механизма слежения за состоянием соединений (connection tracking).


Цепочки: PREROUTING, ОUTPUT

5. security – таблица, связанная с модулями SELinux и другими механизмами безопасности.


Цепочки: INPUT, FORWARD, OUTPUT

При обработке пакета ядро проходит через соответствующие цепочки в нужных таблицах. В каждой цепочке правила проверяются последовательно сверху вниз до тех пор, пока не будет найдено совпадение. Если ни одно правило не подходит, применяется политика по умолчанию (default policy), которая,например, принимает значение ACCEPT (разрешить) или DROP (отбросить).


## Правила iptables и их структура

Каждое правило в iptables состоит из двух частей:

* условия сопоставления – параметры, по которым проверяется соответствие пакета (IP-адреса, порты, протоколы, интерфейсы и т.д.)

* цель (target) – действие, выполняемое при совпадении (например, ACCEPT, DROP, REJECT)

Примеры базовых целей:

* ACCEPT – разрешить прохождение пакета.

* DROP – отбросить пакет без уведомления отправителя.

* REJECT – отклонить пакет с уведомлением.

* LOG – записать информацию о пакете в системный журнал.

* DNAT/SNAT – изменить адрес назначения или источника.

* MASQUERADE – динамическая замена адреса источника для выхода в Интернет.

Пример добавления правила ([рис. @fig-001]).

sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT


Это правило разрешает входящие TCP-подключения на порт 22 (SSH).

Удаление правила:


sudo iptables -D INPUT -p tcp --dport 22 -j ACCEPT

![Добавление и удаление правил](image/1.jpg){#fig-001 width=70%}



Просмотр текущих правил ([рис. @fig-002]):

sudo iptables -L -v -n

![Просмотр текущих правил](image/2.jpg){#fig-002 width=70%}


##  Состояния соединений и фильтрация

iptables поддерживает слежение за состоянием соединений (connection tracking), что позволяет более точно контролировать сетевой трафик. Основные состояния:

* NEW – новое соединение. 

* ESTABLISHED – уже установленное соединение.

* RELATED – соединение, связанное с существующим.

* INVALID – некорректный или повреждённый пакет.

Пример использования:


sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT


Это правило разрешает пакеты, относящиеся к уже установленным или связанным соединениям.



##  iptables и nftables: эволюция фильтрации пакетов

С выходом ядра Linux 3.13 была представлена новая подсистема фильтрации пакетов — nftables, призванная заменить iptables. nftables предлагает более гибкий и унифицированный синтаксис, улучшенную производительность и расширенные возможности.

Тем не менее, iptables по-прежнему широко используется и поддерживается, особенно на серверах и в устоявшихся инфраструктурах. Многие дистрибутивы Linux включают совместимость с iptables через эмуляцию на основе nftables.


# Заключение

Фильтр пакетов iptables является важным инструментом обеспечения сетевой безопасности в операционных системах Linux. Он предоставляет гибкие и мощные средства управления сетевым трафиком, позволяя администраторам реализовать функции межсетевого экрана, трансляции адресов, контроля соединений и многое другое.
Понимание принципов работы iptables, структуры таблиц и цепочек, а также синтаксиса правил позволяет эффективно управлять сетевыми потоками и защищать систему от внешних и внутренних угроз. Несмотря на появление нового механизма nftables, утилита iptables остаётся востребованным и широко применяемым инструментом в области администрирования сетевых подсистем.




# Список литературы{.unnumbered}

- Documentation of iptables in Linux man pages: man iptables
- Linux Foundation. Netfilter Project – Official Documentation. URL: [https://www.netfilter.org](https://www.netfilter.org) (дата обращения: 05.10.2025).
- Red Hat. Securing Networks: Using iptables and Firewalls. Red Hat Enterprise Linux Documentation. URL: [https://access.redhat.com/documentation](https://access.redhat.com/documentation) (дата обращения: 04.10.2025).
- R. Russell, Linux IP Tables Pocket Reference. — O’Reilly Media, 2004.
- Ubuntu Community Help Wiki. IptablesHowTo. URL: [https://help.ubuntu.com/community/IptablesHowTo](https://help.ubuntu.com/community/IptablesHowTo) (дата обращения: 05.10.2025).


::: {#refs}
:::
